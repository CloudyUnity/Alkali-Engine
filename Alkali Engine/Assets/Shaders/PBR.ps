#define BUMP_2_CHANNEL 0

struct V_OUT
{
    float4 Position : SV_Position;
    float2 UV : TEXCOORD0;
    float3 Normal : NORMAL;    
    float3 Tangent : TANGENT;
    float3 Binormal : BINORMAL;
};

Texture2D g_texture : register(t0);
Texture2D g_normalMap : register(t1);
SamplerState g_sampler : register(s0);

float4 main(V_OUT input) : SV_Target
{
    //return float4(frac(input.UV), sign(input.UV.y), 1);
    //return float4(frac(input.UV), 0, 1);
    //return float4(input.UV, 0, 1);

    float4 tex = g_texture.Sample(g_sampler, input.UV);
    //return tex;

    tex.rgb = pow(tex.rgb, 2.2f);

#if BUMP_2_CHANNEL
    float2 bump = g_normalMap.Sample(g_sampler, input.UV).rg;

    float3 normalTangentSpace;
    normalTangentSpace.xy = bump * 2.0f - 1.0f;
    normalTangentSpace.z = sqrt(1.0f - dot(normalTangentSpace.xy, normalTangentSpace.xy));
#else
    float3 normalTangentSpace = g_normalMap.Sample(g_sampler, input.UV).rgb;
    normalTangentSpace.xyz = normalTangentSpace.xyz * 2.0f - 1.0f;
#endif

    //return float4(bump, 0, 1);
    //return float4(abs(input.Normal), 1);
    //return float4(abs(input.Tangent), 1);
    //return float4(abs(input.Binormal), 1);
    //return float4(input.UV, 0, 1);    

    float3 normalWorldSpace = normalize(
        normalTangentSpace.x * input.Tangent +
        normalTangentSpace.y * input.Binormal +
        normalTangentSpace.z * input.Normal);

    //return float4(normalWorldSpace, 1);

    float3 lightDir = normalize(float3(0.5, -1, -0.1));    

    float3 ambient = 0.15f;
    float4 finalCol = float4(ambient, tex.a);

    float intensity = max(0, dot(-lightDir, normalWorldSpace));
    float3 diffuseDirColor = (1, 1, 1);
    float specularPower = 32;
    
    finalCol.rgb += diffuseDirColor * intensity;
    //reflection = normalize(2.0f * intensity * normalWorldSpace + lightDir); 
    //specular = pow(saturate(dot(reflection, input.viewDirection)), specularPower);
    
    finalCol.rgb = saturate(finalCol.rgb * tex.rgb);
    finalCol.rgb = pow(finalCol.rgb, 1.0f / 2.2f);

    return finalCol;
}