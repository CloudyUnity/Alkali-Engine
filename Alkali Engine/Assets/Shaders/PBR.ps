struct V_OUT
{
    float4 Position : SV_Position;
    float2 UV : TEXCOORD0;
    float3 Normal : NORMAL;    
    float3 Tangent : TANGENT;
    float3 Binormal : BINORMAL;
};

Texture2D g_texture : register(t0);
Texture2D g_normalMap : register(t1);
SamplerState g_sampler : register(s0);

float4 main(V_OUT input) : SV_Target
{
    float4 tex = g_texture.Sample(g_sampler, input.UV);
    float2 bump = g_normalMap.Sample(g_sampler, input.UV).rg;

    float3 normalTangentSpace;
    normalTangentSpace.xy = bump * 2.0f - 1.0f;
    normalTangentSpace.z = sqrt(1.0f - dot(normalTangentSpace.xy, normalTangentSpace.xy));

    float3 normalWorldSpace = normalize(
        normalTangentSpace.x * input.Tangent +
        normalTangentSpace.y * input.Binormal +
        normalTangentSpace.z * input.Normal);

    float3 lightDir = normalize(float3(0.5, -1, 0.1));

    float intensity = saturate(dot(-lightDir, normalWorldSpace));
    //return float4(intensity, intensity, intensity, 1);

    float3 ambient = (0,0,0);
    float3 col = lerp(ambient, tex.rgb, intensity);

    return float4(col, tex.a);
}